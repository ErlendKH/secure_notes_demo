[versions]
agp = "8.11.1"
kotlin = "2.2.10"

# Android / Kotlin
coreKtx = "1.17.0"
appcompat = "1.7.1"
material = "1.12.0"
constraintlayout = "2.2.1"

# Coroutines
coroutines = "1.10.2"

# Navigation
navigationFragmentKtx = "2.9.3"
navigationUiKtx = "2.9.3"
navigationCompose = "2.9.3"

# Compose
compose = "1.10.1"
composeBom = "2025.08.00"
composeMaterial3 = "1.3.2"
foundationAndroid = "1.9.0"
uiAndroid = "1.9.0"
runtimeAndroid = "1.9.0"
lifecycleRuntimeKtx = "2.9.2"
activityCompose = "1.10.1"

# Room / Database / Security
roomCompiler = "2.7.2"
roomKtx = "2.7.2"
roomRuntime = "2.7.2"
sqliteFramework = "2.5.2"
androidDatabaseSqlcipher = "4.5.4"
securityCrypto = "1.1.0"

# Testing
junit = "4.13.2"
androidxJunit = "1.1.5"
espressoCore = "3.5.0"
uiTestJunit4Android = "1.9.0"
uiTestManifest = "1.9.0"
coroutinesTest = "1.10.2"
mockk = "1.14.5"
mockkAndroid = "1.14.5"
robolectric = "4.16"

[libraries]
# Android / Kotlin
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }

# Coroutines
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }

# Navigation
androidx-navigation-fragment-ktx = { group = "androidx.navigation", name = "navigation-fragment-ktx", version.ref = "navigationFragmentKtx" }
androidx-navigation-ui-ktx = { group = "androidx.navigation", name = "navigation-ui-ktx", version.ref = "navigationUiKtx" }
androidx-navigation-compose = { group = "androidx.navigation", name = "navigation-compose", version.ref = "navigationCompose" }

# Compose
androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "composeMaterial3" }
androidx-foundation-android = { group = "androidx.compose.foundation", name = "foundation-android", version.ref = "foundationAndroid" }
androidx-ui-android = { group = "androidx.compose.ui", name = "ui-android", version.ref = "uiAndroid" }
androidx-runtime-android = { group = "androidx.compose.runtime", name = "runtime-android", version.ref = "runtimeAndroid" }
lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }

# Room / Database / Security
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "roomCompiler" }
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "roomKtx" }
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "roomRuntime" }
androidx-sqlite-framework = { module = "androidx.sqlite:sqlite-framework", version.ref = "sqliteFramework" }
android-database-sqlcipher = { module = "net.zetetic:android-database-sqlcipher", version.ref = "androidDatabaseSqlcipher" }
androidx-security-crypto = { module = "androidx.security:security-crypto", version.ref = "securityCrypto" }

# Testing
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidxJunit" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-ui-test-junit4-android = { group = "androidx.compose.ui", name = "ui-test-junit4-android", version.ref = "uiTestJunit4Android" }
androidx-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "uiTestManifest" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutinesTest" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockk-android = { module = "io.mockk:mockk-android", version.ref = "mockkAndroid" }
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
org-jetbrains-kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

